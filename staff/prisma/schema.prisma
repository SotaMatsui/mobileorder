datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
  orders    Order[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  customerId   String
  expires      DateTime
  customer     Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@index([customerId])
}

model MenuItem {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Int
  imageUrl    String?
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
}

model Staff {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id          String      @id @default(cuid())
  customerId  String
  menuItemId  String
  tableNumber Int
  quantity    Int
  orderDate   DateTime    @default(now())
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  customer    Customer    @relation(fields: [customerId], references: [id])
  menuItem    MenuItem    @relation(fields: [menuItemId], references: [id])

  @@index([customerId])
  @@index([menuItemId])
}

enum OrderStatus {
  PENDING
  PREPARING
  READY
  DELIVERED
  PAID
  CANCELLED
}
